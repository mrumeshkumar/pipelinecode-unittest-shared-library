pipeline { 
   agent any

    tools { 
        maven 'Maven 3.6.0' 
        jdk 'jdk8' 
    }
    options {
        skipStagesAfterUnstable()
    }
    stages { 
        stage ('Initialize') {
            steps {
                bat '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }
     /*   stage ('SonarScan'){
             steps {
                bat ' mvn sonar:sonar \
                        -Dsonar.projectKey=mrumeshkumar_pipelinecode-unittest-shared-library \
                        -Dsonar.organization=mrumeshkumar-github \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.login=33d4ddfc5d686070b7a872d5a737a20affb0060c'
             }
        }*/
        
        stage('Build') { 
            steps { 
               echo 'This is a minimal pipeline.' 
               // bat 'mvn -Dmaven.test.failure.ignore=true install'
                bat 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                 echo 'mvn test' 
                 bat 'mvn test'
            }
            post {
                always {
                      echo 'mvn test Post' 
                     // junit 'target/surefire-reports/*.xml'
                      junit allowEmptyResults: true, testResults: 'target/surefire-reports/*.xml'
                }
            }
        }
    }
    post {
    failure {
    //    mail to: 'mrumebatkumar@hotmail.com',
      //       subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
      //       body: "Something is wrong with ${env.BUILD_URL}"

       echo  "Failed Pipeline: ${currentBuild.fullDisplayName}"
    }
}
}